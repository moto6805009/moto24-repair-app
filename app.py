import streamlit as st
import requests

st.set_page_config(page_title="‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏° MOTO24", layout="centered")

# ----------------------
# CONFIG
# ----------------------
WEBHOOK_URL = "https://script.google.com/macros/s/AKfycbzd67eqgXFH_b82pnFrPsUlfgmPKto1mlp9rGgJUObVUqtx4cc0eDGFcBbbtmz4oMFnJg/exec"
ADMIN_PASSWORD = "Admin123"

# ----------------------
# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° Webhook
# ----------------------
def post_json(payload):
    try:
        res = requests.post(WEBHOOK_URL, json=payload, timeout=10)
        return res.json()
    except:
        return None

def get_json(params=None):
    try:
        res = requests.get(WEBHOOK_URL, params=params, timeout=10)
        return res.json()
    except:
        return None

# ----------------------
# UI
# ----------------------
st.title("üõ†Ô∏è ‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏° MOTO24")

menu = st.sidebar.radio("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π", ["‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°", "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞", "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô"])

# ----------------------
# 1. ‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°
# ----------------------
if menu == "‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°":
    st.subheader("üìã ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°")
    name = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á")
    company = st.text_input("‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó / ‡∏™‡∏≤‡∏Ç‡∏≤")
    problem = st.text_area("‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏û‡∏ö")
    reason = st.text_area("‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•/‡∏™‡∏≤‡πÄ‡∏´‡∏ï‡∏∏ (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ)")
    contact = st.text_input("‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ (‡πÄ‡∏ö‡∏≠‡∏£‡πå/‡πÑ‡∏•‡∏ô‡πå)")
    image_links = st.text_area("‡πÅ‡∏ô‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û (‡∏´‡∏≤‡∏Å‡∏°‡∏µ)", help="‡πÉ‡∏™‡πà‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ Google Drive ‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏∑‡πà‡∏ô ‡πÜ")

    if st.button("‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°"):
        if name and company and problem and contact:
            payload = {
                "action": "create",
                "name": name,
                "company": company,
                "problem": problem,
                "reason": reason,
                "contact": contact,
                "image_links": image_links
            }
            result = post_json(payload)
            if result and "id" in result:
                st.success(f"‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‚úÖ\n\n‡∏£‡∏´‡∏±‡∏™: {result.get('id', '')}")
            else:
                st.error("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
        else:
            st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô")

# ----------------------
# 2. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
# ----------------------
elif menu == "‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞":
    st.subheader("üîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°")
    rid = st.text_input("‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö")
    if st.button("‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö"):
        if rid:
            data = get_json(params={"action": "check", "id": rid})
            if data and isinstance(data, dict):
                st.success("‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°")
                st.write(f"üîπ ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÅ‡∏à‡πâ‡∏á: {data.get('name', '-')}")
                st.write(f"üè¢ ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó: {data.get('company', '-')}")
                st.write(f"üõ†Ô∏è ‡∏õ‡∏±‡∏ç‡∏´‡∏≤: {data.get('problem', '-')}")
                st.write(f"üìÑ ‡πÄ‡∏´‡∏ï‡∏∏‡∏ú‡∏•: {data.get('reason', '-')}")
                st.write(f"üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏Å‡∏•‡∏±‡∏ö: {data.get('contact', '-')}")
                st.write(f"üì∏ ‡πÅ‡∏ô‡∏ö‡∏£‡∏π‡∏õ: {data.get('image_links', '-')}")
                st.write(f"üìå ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î: **{data.get('status', '-')}**")
            else:
                st.error("‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ")
        else:
            st.warning("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°")

# ----------------------
# 3. ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô
# ----------------------
elif menu == "‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô":
    st.subheader("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô")
    password = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô", type="password")
    if password == ADMIN_PASSWORD:
        st.success("‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")

        data = get_json(params={"action": "all"})
        if data:
            st.subheader("üìÑ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡∏ã‡πà‡∏≠‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
            for row in reversed(data):
                rid = row.get('id', '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏´‡∏±‡∏™')
                name = row.get('name', '-')
                branch = row.get('branch', row.get('company', '-'))
                status = row.get('status', '-')
                st.info(f"{rid} | {name} | {branch} | ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: {status}")

        st.markdown("---")
        st.subheader("üîÑ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°")
        rid = st.text_input("‡∏£‡∏´‡∏±‡∏™‡∏á‡∏≤‡∏ô‡∏ã‡πà‡∏≠‡∏°")
        newstatus = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÉ‡∏´‡∏°‡πà", ["‡∏£‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£", "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ã‡πà‡∏≠‡∏°", "‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß", "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å"])
        if st.button("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞"):
            result = post_json({"action": "update", "id": rid, "status": newstatus})
            if result and result.get("status") == "updated":
                st.success("‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß")
            else:
                st.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÑ‡∏î‡πâ ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏£‡∏´‡∏±‡∏™")
    elif password:
        st.error("‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
